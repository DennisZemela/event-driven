CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(PROJECTNAME readRaw)
PROJECT(${PROJECTNAME})

SET(YARP_DIR "$ENV{YARP_ROOT}" CACHE LOCATION "where is yarp?")
FIND_PACKAGE(YARP)
LINK_LIBRARIES(${YARP_LIBRARIES})
INCLUDE_DIRECTORIES(${YARP_INCLUDE_DIRS})

# support library for vecBuffer devices and interfaces
#FIND_PACKAGE(EVENTBUFFER REQUIRED)
LINK_LIBRARIES(EVENTBUFFER)
INCLUDE_DIRECTORIES(${EVENTBUFFER_INCLUDE_DIRS})

#FIND_PACKAGE(VECBUFFER REQUIRED)
LINK_LIBRARIES(VECBUFFER)
INCLUDE_DIRECTORIES(${VECBUFFER_INCLUDE_DIRS})

#FIND_PACKAGE(MATRIXPP REQUIRED)
#LINK_LIBRARIES(${MATRIXPP_LIBRARIES})
#INCLUDE_DIRECTORIES(${MATRIXPP_INCLUDE_DIRS})

#FIND_PACKAGE(VECTORPP REQUIRED)
#LINK_LIBRARIES(${VECTORPP_LIBRARIES})
#INCLUDE_DIRECTORIES(${VECTORPP_INCLUDE_DIRS})

#FIND_PACKAGE(SYNAPSE REQUIRED)
LINK_LIBRARIES(SYNAPSE)
INCLUDE_DIRECTORIES(${SYNAPSE_INCLUDE_DIRS})

#FIND_PACKAGE(ELUCASKANADE REQUIRED)
LINK_LIBRARIES(ELUCASKANADE)
INCLUDE_DIRECTORIES(${ELUCASKANADE_INCLUDE_DIRS})


#LINK_LIBRARIES(/usr/lib/libarmadillo.so)
#INCLUDE_DIRECTORIES(/usr/include/armadillo_bits/)
#LINK_LIBRARIES($ARMADILLO_DIR/lib/libarmadillo.so)
#INCLUDE_DIRECTORIES($ARMADILLO_DIR/include/armadillo_bits/)

FILE(GLOB folder_source src/*.cpp)
FILE(GLOB folder_header include/*.h)

SOURCE_GROUP("Source Files" FILES ${folder_source})
SOURCE_GROUP("Header Files" FILES ${folder_header})

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
#INCLUDE_DIRECTORIES(${YARP_INCLUDE_DIR})

ADD_EXECUTABLE(${PROJECTNAME} 	${folder_source} ${folder_header})# ${source_files} ${header_files})

#TARGET_LINK_LIBRARIES (	${PROJECTNAME} ${YARP_LIBRARIES} )
			
#SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/build)
SET(EXECUTABLE_OUTPUT_PATH $ENV{MODULES_ROOT}/bin)

#INSTALL_TARGETS($ENV{MYMODULES} ${PROJECTNAME})
